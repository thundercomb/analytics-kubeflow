steps:
- name: "eu.gcr.io/${PROJECT_ID}/kubeflow-tools"
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     echo "Preparing ..."

     gcloud beta container clusters get-credentials ${_GKE_CLUSTER_NAME} --zone ${_REGION}-a --project ${_ANALYTICS_PROJECT}
     gcloud config set project ${_ANALYTICS_PROJECT}
     gcloud config set compute/zone "${_REGION}-a"

     CONFIG_URI="${_KFCTL_CONFIG}"
     CLIENT_ID="${_OAUTH_CLIENT_ID}"
     CLIENT_SECRET="${_OAUTH_CLIENT_SECRET}"
     KF_NAME="${_GKE_CLUSTER_NAME}"
     BASE_DIR="/workspace/kf_deployments"
     KF_DIR="$${BASE_DIR}/$${KF_NAME}"
     export CONFIG_URI CLIENT_ID CLIENT_SECRET KF_NAME BASE_DIR KF_DIR

     echo "Building and applying kubeflow config ..."

     mkdir -p $${KF_DIR}
     cd $${KF_DIR}
     curl -L -o kubeflow.yaml $${CONFIG_URI}
     kfctl build -V -f kubeflow.yaml
     find
     rm -rf gcp_config
     kfctl apply -V -f kubeflow.yaml
     STATUS="NO"
     while [ "$${STATUS}" != "" ]; do
       echo "Monitoring pods until they're all running, this could take a few minutes ..."
       STATUS=$(kubectl get pods --all-namespaces | awk '($$4 != "Running" && $$4 != "Completed" && $$4 != "STATUS") { print $$4 }')
       echo "Status: $$STATUS"
       sleep 10
     done

     echo
     echo "SUCCESS: Now use this to get to kubeflow:"
     echo "kubectl port-forward -n istio-system svc/istio-ingressgateway 8080:80"
     echo
  dir: /workspace

substitutions:
  _KFCTL_CONFIG: https://raw.githubusercontent.com/kubeflow/manifests/v1.0-branch/kfdef/kfctl_gcp_iap.v1.0.1.yaml

timeout: "1600s"
